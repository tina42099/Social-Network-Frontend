//-https://github.com/sahat/hackathon-starter/blob/master/views/api/google-maps.pug

extends template

block content

  head
    meta(name='viewport', content='initial-scale=1.0, user-scalable=no')
    meta(charset='utf-8')
    title Places Searchbox
    style.
      #map {
        height: 850px;
      }

      #submit_map {
        height: 50px;
      }

      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }

      #description {
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
      }
      #infowindow-content .title {
        font-weight: bold;
      }
      #infowindow-content {
        display: none;
      }
      #map #infowindow-content {
        display: inline;
      }
      .pac-card {
        margin: 10px 10px 0 0;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        background-color: #fff;
        font-family: Roboto;
      }
      #pac-container {
        padding-bottom: 12px;
        margin-right: 12px;
      }
      .pac-controls {
        display: inline-block;
        padding: 5px 11px;
      }
      .pac-controls label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }
      #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        padding: 0 11px 0 13px;
        margin-left: 30%;
        text-overflow: ellipsis;
        width: 20%;
      }
      #pac-input:focus {
        border-color: #4d90fe;
      }
      #title {
        color: #fff;
        background-color: #4d90fe;
        font-size: 25px;
        font-weight: 500;
        padding: 6px 12px;
      }
      #target {
        width: 345px;
      }
      #check_in {
        bottom: 0;
        left: 0;
        width: 100px;
        height: 50px;
        background-color: rgba(25, 219, 151, 1);
        font-size: 20px;
        margin-bottom: 150px;
      }
  body
    input#pac-input.controls(type='text', placeholder='Search Box')
    button#check_in(type='submit' value="checkIn") Check In
    #map
      //- (onload='initAutocomplete(\'+ friends +\')')
    script.
      //f(#{friends})

      var map, infoWindow, startMarker;
      var info;
      var friends = '#{friends}'
      function initAutocomplete() {
        friends = JSON.parse(friends.replace(/&quot;/gi, '"'))
        console.log(friends)
        console.log("friends", friends)
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 37.0902, lng: -95.7129},
          zoom: 5,
          mapTypeId: 'roadmap'
        });

        infoWindow = new google.maps.InfoWindow;
        var check_in_pos;
        //- if (localStorage._id) {
        //-   seeFriends()
        //- }

        // Try HTML5 geolocation.
        if (navigator.geolocation) {
          console.log("hello1")
          navigator.geolocation.getCurrentPosition(function(position) {
            pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            check_in_pos = pos
            startMarker = new google.maps.Marker({
              map: map,
              position: pos,
              title: 'You are Here'
            });

            infoWindow.setPosition(pos);
            infoWindow.setContent('You Are Here');
            infoWindow.open(map);
            map.setCenter(pos);
            map.setZoom(18)
          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          })
          document.getElementById('check_in').addEventListener('click', function(){
            if (this.innerHTML == "Check In") {
              checkIn(check_in_pos);
              this.innerHTML = "Check Out";
              infoWindow.setContent('You Are Checked In!')
            }
            else {
              checkOut();
              this.innerHTML = "Check In";
              infoWindow.setContent("You Are Here")
            }
          })
        } else {
            // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }

        function displayOtherUsers(users, map) {
          info = new google.maps.InfoWindow();
          var marker, i;
          for (i = 0; i < users.length; i++) {
            console.log(users[i])  
            if (users[i].activity == true) {
              icon = {
                  url: 'http://image.flaticon.com/icons/svg/252/252025.svg',
                  //size: new google.maps.Size(45, 45),
                  scaledSize: new google.maps.Size(45, 45),
                  origin: new google.maps.Point(0, 0),
                  anchor: new google.maps.Point(17, 34),
                  labelOrigin: new google.maps.Point(23, 55)
              }
            }
            else {
              icon = {
                  url: 'https://image.flaticon.com/icons/svg/33/33622.svg',
                  //size: new google.maps.Size(45, 45),
                  scaledSize: new google.maps.Size(45, 45),
                  origin: new google.maps.Point(0, 0),
                  anchor: new google.maps.Point(17, 34),
                  labelOrigin: new google.maps.Point(23, 55)
              }
            }
            marker = new google.maps.Marker({
              position: new google.maps.LatLng(parseFloat(users[i].location.lat), parseFloat(users[i].location.lng)),
              map: map, 
              title: users[i].check_in,
              icon: icon,
              //- icon: {
              //-     url: 'http://image.flaticon.com/icons/svg/252/252025.svg',
              //-     //size: new google.maps.Size(45, 45),
              //-     scaledSize: new google.maps.Size(45, 45),
              //-     origin: new google.maps.Point(0, 0),
              //-     anchor: new google.maps.Point(17, 34),
              //-     labelOrigin: new google.maps.Point(23, 55)
              //- },
              label: {
                text: users[i].name,
                fontWeight: 'bold',
                fontSize: '14px',
              }
            })
            marker.addListener('click', (function(marker) {
               console.log("heyy") 
                //var content = users[i].name;  
                var content = "hi";
                info.setContent(content);  
                info.open(map, marker); 
                console.log("byee")  
            }));  
          }
        }

        displayOtherUsers(friends, map)

        // Create the search box and link it to the UI element.
        var input = document.getElementById('pac-input');
        var check_in = document.getElementById('check_in');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_CENTER].push(input);
        map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(check_in);
        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });
        
        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function() {
          var places = searchBox.getPlaces();
          if (places.length == 0) {
          return;
        }
        // Clear out the old markers.
        markers.forEach(function(marker) {
          marker.setMap(null);
        });
        markers = [];
        // For each place, get the icon, name and location.
        var bounds = new google.maps.LatLngBounds();

        places.forEach(function(place) {
          if (!place.geometry) {
            console.log("Returned place contains no geometry");
            return;
          }
          var place_icon = {
            url: place.icon,
            size: new google.maps.Size(71, 71),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(17, 34),
            scaledSize: new google.maps.Size(25, 25)
          };
        // Create a marker for each place.
          markers.push(new google.maps.Marker({
            map: map,
            icon: place_icon,
            title: place.name,
            position: place.geometry.location
          }));
          if (place.geometry.viewport) {
          // Only geocodes have viewport.
            bounds.union(place.geometry.viewport);
          } else {
            bounds.extend(place.geometry.location);
          }
        
        });
        map.fitBounds(bounds);
        });
      }

      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                            'Error: The Geolocation service failed.' :
                            'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
      } 

      //- function showInfo(marker, content)
      //- {
      //-     infoWindow = 
      //-     // Start div
      //-     let div = "<div id='info'>";
      //-     if (typeof(content) == "undefined")
      //-     {
      //-         // http://www.ajaxload.info/
      //-         div += "<img alt='loading' src='/static/ajax-loader.gif'/>";
      //-     }
      //-     else
      //-     {
      //-         div += content;
      //-     }

      //-     // End div
      //-     div += "</div>";

      //-     // Set info window's content
      //-     info.setContent(div);

      //-     // Open info window (if not already open)
      //-     info.open(map, marker);
      //- }

      //- function displayOtherUsers(users, map) {
      //-   console.log("friends2", users)
      //-   var infoWindow = new google.maps.InfoWindow();
      //-   var marker, i;
      //-   for (i = 0; i < users.length; i++) {  
      //-     marker = new google.maps.Marker({
      //-       position: new google.maps.LatLng(users[i].location.lat, users[i].location.lng),
      //-       map: map
      //-     });

      //-     google.maps.event.addListener(marker, 'click', (function(marker, i) {
      //-       return function() {
      //-         infowindow.setContent(users[i].name);
      //-         infowindow.open(map, marker);
      //-       }
      //-     })(marker, i));
      //-   }
      //- }
      
    script(src='https://maps.googleapis.com/maps/api/js?key=AIzaSyDnLW1czivMAJWi5LxMmX4LlO3XYzql9aU&libraries=places&callback=initAutocomplete', async='', defer='')

    //- block postscript
    //-   script.
    //-     var friends = '#{friends}'
    //-   script(src='https://maps.googleapis.com/maps/api/js?key=AIzaSyDnLW1czivMAJWi5LxMmX4LlO3XYzql9aU&libraries=places&callback=initAutocomplete', async='', defer='')



